generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   String @id @default(cuid())
  userName String
  password String
  email    String @unique
  quiz     Quiz[]
}

model Quiz {
  quizId         String     @id @default(cuid())
  quizName       String
  quizCreatedOn  DateTime   @default(now())
  quizImpression Int?       @default(0)
  quizType       QuizType
  questions      Question[]
  userId         String
  user           User       @relation(fields: [userId], references: [userId])
}

model Question {
  questionId       String     @id @default(cuid())
  questionTitle    String
  questionAnalysis Analysis[]
  optionType       String
  optionOne        String
  optionTwo        String
  optionThree      String?
  optionFour       String?
  quizId           String
  questionTimer    Int?
  correctAns       Int?
  quiz             Quiz       @relation(fields: [quizId], references: [quizId], onDelete: Cascade)
}

model Analysis {
  analysisId                  String   @id @default(cuid())
  questionAttemptedCount      Int?     @default(0)
  questionCorrectlyAnswered   Int?     @default(0)
  questionIncorrectlyAnswered Int?     @default(0)
  ChosedOptionOneCount        Int?     @default(0)
  ChosedOptionTwoCount        Int?     @default(0)
  ChosedOptionThreeCount      Int?     @default(0)
  ChosedOptionFourCount       Int?     @default(0)
  questionId                  String
  question                    Question @relation(fields: [questionId], references: [questionId], onDelete: Cascade)
}

enum QuizType {
  qna
  poll
}
